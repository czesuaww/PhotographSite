"use strict";var $nav,$burgerBtn,$allNavItems,$navBtnBars,$allSections,$footerYear,$navD,$sectionOne,$portfolioLi,$dropdownMoblie,sectionOneOptions={rootMargin:"-200px 0px 0px 0px"},prepareDOMElemets=function(){$nav=document.querySelector(".navigationM"),$navD=document.querySelector(".navigationD"),$sectionOne=document.querySelector(".navBlack"),$burgerBtn=document.querySelector(".burger-btn"),$allNavItems=document.querySelectorAll(".nav__mobile"),$navBtnBars=document.querySelector(".burger-btn__bars"),$allSections=document.querySelectorAll(".section"),$footerYear=document.querySelector(".footer__year"),$portfolioLi=document.querySelector(".portfolio"),$dropdownMoblie=document.querySelector(".navigationM__mobile-dropdown")},prepareDOMEvents=function(){function e(){var n=0;$allNavItems.forEach(function(e){e.classList.toggle("nav-items-animation"),e.style.animationDelay="."+n+"s",n++})}var n=new IntersectionObserver(function(e,n){e.forEach(function(e){e.isIntersecting?$navD.classList.remove("nav-scrolled"):$navD.classList.add("nav-scrolled")})},sectionOneOptions);n.observe($sectionOne),n=(new Date).getFullYear(),$footerYear.innerText=n,window.addEventListener("scroll",function(){var n=window.scrollY;$allSections.forEach(function(e){e.classList.contains("white-section")&&e.offsetTop<=n+60?$navBtnBars.classList.add("black-bars-color"):!e.classList.contains("white-section")&&e.offsetTop<=n+60&&$navBtnBars.classList.remove("black-bars-color")})}),$burgerBtn.addEventListener("click",function(){$nav.classList.toggle("navigationM--active"),$navBtnBars.classList.remove("black-bars-color"),$allNavItems.forEach(function(e){e.addEventListener("click",function(){$nav.classList.remove("navigationM--active")})}),e()}),$portfolioLi.addEventListener("click",function(){return $dropdownMoblie.classList.toggle("dropdown-list")}),window.addEventListener("load",AOS.refresh)},main=function(){prepareDOMElemets(),prepareDOMEvents()};document.addEventListener("DOMContentLoaded",main);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiJG5hdiIsIiRidXJnZXJCdG4iLCIkYWxsTmF2SXRlbXMiLCIkbmF2QnRuQmFycyIsIiRhbGxTZWN0aW9ucyIsIiRmb290ZXJZZWFyIiwiJG5hdkQiLCIkc2VjdGlvbk9uZSIsIiRkcm9wZG93bk1vYmxpZSIsInJvb3RNYXJnaW4iLCJzZWN0aW9uT25lT3B0aW9ucyIsInByZXBhcmVET01FbGVtZXRzIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwicXVlcnlTZWxlY3RvckFsbCIsIiRwb3J0Zm9saW9MaSIsInByZXBhcmVET01FdmVudHMiLCJoYW5kbGVOYXZJdGVtc0FuaW1hdGlvbiIsImRlbGV5VGltZSIsImZvckVhY2giLCJpdGVtIiwiY2xhc3NMaXN0Iiwic2VjdGlvbk9uZU9ic2VydmVyIiwiZW50cmllcyIsImVudHJ5IiwiaXNJbnRlcnNlY3RpbmciLCJhZGQiLCJvYnNlcnZlIiwiaGFuZGxlQ3VycmVudFllYXIiLCJnZXRGdWxsWWVhciIsImlubmVyVGV4dCIsIndpbmRvdyIsImFkZEV2ZW50TGlzdGVuZXIiLCJoYW5kbGVPYnNlcnZlciIsInNlY3Rpb24iLCJjb250YWlucyIsIm9mZnNldFRvcCIsImN1cnJlbnRTZWN0aW9uIiwicmVtb3ZlIiwidG9nZ2xlIiwiQU9TIiwicmVmcmVzaCIsIm1haW4iXSwibWFwcGluZ3MiOiJhQUFBLElBQUlBLEtBQ0FDLFdBREFELGFBQ0FDLFlBQ0FDLGFBQ0FDLFlBQ0FDLE1BQ0FDLFlBQ0FDLGFBQ0FDLGdCQUVBQyxrQkFBSixDQUVBQyxXQUFNQyxzQkFJQUMsa0JBQW9CLFdBQTFCWCxLQUFNVyxTQUFBQSxjQUFvQixnQkFDeEJYLE1BQU9ZLFNBQVNDLGNBQWMsZ0JBQzlCUCxZQUFRTSxTQUFTQyxjQUFjLGFBQy9CTixXQUFXSyxTQUFXQyxjQUFSLGVBQ2RaLGFBQWFXLFNBQVNDLGlCQUFjLGdCQUNwQ1gsWUFBWVUsU0FBV0MsY0FBQ0MscUJBQ3hCWCxhQUFjUyxTQUFTQyxpQkFBYyxZQUNyQ1QsWUFBWVEsU0FBV0MsY0FBQ0MsaUJBQ3hCVCxhQUFjTyxTQUFTQyxjQUFjLGNBQ3JDRSxnQkFBZUgsU0FBU0MsY0FBYyxrQ0FJbENHLGlCQUFtQixXQWF2QixTQUFBQyxJQWFFLElBQUlDLEVBQVksRUFBaEJoQixhQUFhaUIsUUFBYixTQUFBQyxHQUVBbEIsRUFBQUEsVUFBYWlCLE9BQVEsdUJBQ25CQyxFQUFLQyxNQUFBQSxlQUFpQixJQUFBSCxFQUF0QixJQUNBRSxNQTlCTixJQUN1QkUsRUFBc0JELElBQUFBLHFCQUFpQixTQUF2Q0UsRUFBQUQsR0FBckJDLEVBQUFKLFFBQUEsU0FBQUssR0FJU0EsRUFBTUMsZUFBWG5CLE1BQUtrQixVQUFNQyxPQUFYLGdCQUZFSCxNQUFBQSxVQUFrQkksSUFBRyxtQkFLckJwQixtQkF5RE5nQixFQUFtQkssUUFBUXBCLGFBOUJyQnFCLEdBQUFBLElBQUFBLE1BQW9CQyxjQUN4QnhCLFlBQWF5QixVQUFXRCxFQStCMUJFLE9BQU9DLGlCQUFpQixTQTNCRCxXQUF2QixJQUFNQyxFQUFpQkYsT0FBakJFLFFBR0o3QixhQUFhZSxRQUFRLFNBQUFlLEdBQ2ZBLEVBQVFiLFVBQVVjLFNBQVMsa0JBQW9CRCxFQUFRRSxXQUFhQyxFQUFpQixHQUN2RmxDLFlBQVlrQixVQUFVSyxJQUFJLHFCQUNoQlEsRUFBUWIsVUFBVWMsU0FBUyxrQkFBb0JELEVBQVFFLFdBQWFDLEVBQWlCLElBQy9GbEMsWUFBWWtCLFVBQVVpQixPQUFPLHdCQXFCbkNyQyxXQUFXK0IsaUJBQWlCLFFBaEUxQixXQUR5QmhDLEtBUXhCVSxVQUFBQSxPQVJILHVCQVlFUCxZQUFZa0IsVUFBVWlCLE9BQU8sb0JBRi9CcEMsYUFBZWlCLFFBQUcsU0FBQUMsR0FDaEJwQixFQUFLcUIsaUJBQWlCLFFBQUEsV0FDdEJsQixLQUFBQSxVQUFZa0IsT0FBVWlCLDJCQUluQnJCLE1Ba0RMRixhQUFhaUIsaUJBQWlCLFFBckVQLFdBQUEsT0FBQXhCLGdCQUFuQlEsVUFBeUJ1QixPQUFBLG1CQXNFN0JSLE9BQU9DLGlCQUFpQixPQUFRUSxJQUFJQyxVQUtwQzlCLEtBQUFBLFdBQ0FLLG9CQUZGQSxvQkFLQUosU0FBU29CLGlCQUFpQixtQkFBb0JVIiwiZmlsZSI6Im1haW4ubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsibGV0ICRuYXY7XHJcbmxldCAkYnVyZ2VyQnRuO1xyXG5sZXQgJGFsbE5hdkl0ZW1zO1xyXG5sZXQgJG5hdkJ0bkJhcnM7XHJcbmxldCAkYWxsU2VjdGlvbnM7XHJcbmxldCAkZm9vdGVyWWVhcjtcclxubGV0ICRuYXZEO1xyXG5sZXQgJHNlY3Rpb25PbmU7XHJcbmxldCAkcG9ydGZvbGlvTGk7XHJcbmxldCAkZHJvcGRvd25Nb2JsaWU7XHJcblxyXG5jb25zdCBzZWN0aW9uT25lT3B0aW9ucyA9IHtcclxuICByb290TWFyZ2luOiBcIi0yMDBweCAwcHggMHB4IDBweFwiLFxyXG59O1xyXG5cclxuY29uc3QgcHJlcGFyZURPTUVsZW1ldHMgPSAoKSA9PiB7XHJcbiAgJG5hdiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubmF2aWdhdGlvbk1cIik7XHJcbiAgJG5hdkQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm5hdmlnYXRpb25EXCIpO1xyXG4gICRzZWN0aW9uT25lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5uYXZCbGFja1wiKTtcclxuICAkYnVyZ2VyQnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5idXJnZXItYnRuXCIpO1xyXG4gICRhbGxOYXZJdGVtcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIubmF2X19tb2JpbGVcIik7XHJcbiAgJG5hdkJ0bkJhcnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmJ1cmdlci1idG5fX2JhcnNcIik7XHJcbiAgJGFsbFNlY3Rpb25zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5zZWN0aW9uXCIpO1xyXG4gICRmb290ZXJZZWFyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5mb290ZXJfX3llYXJcIik7XHJcbiAgJHBvcnRmb2xpb0xpID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3J0Zm9saW9cIik7XHJcbiAgJGRyb3Bkb3duTW9ibGllID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5uYXZpZ2F0aW9uTV9fbW9iaWxlLWRyb3Bkb3duXCIpO1xyXG59O1xyXG5cclxuY29uc3QgcHJlcGFyZURPTUV2ZW50cyA9ICgpID0+IHtcclxuICBjb25zdCBzaG93RHJvcGRvd24gPSAoKSA9PiAkZHJvcGRvd25Nb2JsaWUuY2xhc3NMaXN0LnRvZ2dsZShcImRyb3Bkb3duLWxpc3RcIik7XHJcblxyXG4gIGNvbnN0IHNlY3Rpb25PbmVPYnNlcnZlciA9IG5ldyBJbnRlcnNlY3Rpb25PYnNlcnZlcihmdW5jdGlvbiAoZW50cmllcywgc2VjdGlvbk9uZU9ic2VydmVyKSB7XHJcbiAgICBlbnRyaWVzLmZvckVhY2goKGVudHJ5KSA9PiB7XHJcbiAgICAgIGlmICghZW50cnkuaXNJbnRlcnNlY3RpbmcpIHtcclxuICAgICAgICAkbmF2RC5jbGFzc0xpc3QuYWRkKFwibmF2LXNjcm9sbGVkXCIpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgICRuYXZELmNsYXNzTGlzdC5yZW1vdmUoXCJuYXYtc2Nyb2xsZWRcIik7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH0sIHNlY3Rpb25PbmVPcHRpb25zKTtcclxuXHJcbiAgY29uc3QgaGFuZGxlTmF2ID0gKCkgPT4ge1xyXG4gICAgJG5hdi5jbGFzc0xpc3QudG9nZ2xlKFwibmF2aWdhdGlvbk0tLWFjdGl2ZVwiKTtcclxuICAgICRuYXZCdG5CYXJzLmNsYXNzTGlzdC5yZW1vdmUoXCJibGFjay1iYXJzLWNvbG9yXCIpO1xyXG4gICAgJGFsbE5hdkl0ZW1zLmZvckVhY2goKGl0ZW0pID0+IHtcclxuICAgICAgaXRlbS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgICAgICRuYXYuY2xhc3NMaXN0LnJlbW92ZShcIm5hdmlnYXRpb25NLS1hY3RpdmVcIik7XHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcblxyXG4gICAgaGFuZGxlTmF2SXRlbXNBbmltYXRpb24oKTtcclxuICB9O1xyXG5cclxuICBjb25zdCBoYW5kbGVOYXZJdGVtc0FuaW1hdGlvbiA9ICgpID0+IHtcclxuICAgIGxldCBkZWxleVRpbWUgPSAwO1xyXG5cclxuICAgICRhbGxOYXZJdGVtcy5mb3JFYWNoKChpdGVtKSA9PiB7XHJcbiAgICAgIGl0ZW0uY2xhc3NMaXN0LnRvZ2dsZShcIm5hdi1pdGVtcy1hbmltYXRpb25cIik7XHJcbiAgICAgIGl0ZW0uc3R5bGUuYW5pbWF0aW9uRGVsYXkgPSBcIi5cIiArIGRlbGV5VGltZSArIFwic1wiO1xyXG4gICAgICBkZWxleVRpbWUrKztcclxuICAgIH0pO1xyXG4gIH07XHJcblxyXG4gIGNvbnN0IGhhbmRsZUN1cnJlbnRZZWFyID0gKCkgPT4ge1xyXG4gICAgY29uc3QgeWVhciA9IG5ldyBEYXRlKCkuZ2V0RnVsbFllYXIoKTtcclxuICAgICRmb290ZXJZZWFyLmlubmVyVGV4dCA9IHllYXI7XHJcbiAgfTtcclxuXHJcbiAgY29uc3QgaGFuZGxlT2JzZXJ2ZXIgPSAoKSA9PiB7XHJcbiAgICBjb25zdCBjdXJyZW50U2VjdGlvbiA9IHdpbmRvdy5zY3JvbGxZO1xyXG5cclxuICAgICRhbGxTZWN0aW9ucy5mb3JFYWNoKChzZWN0aW9uKSA9PiB7XHJcbiAgICAgIGlmIChzZWN0aW9uLmNsYXNzTGlzdC5jb250YWlucyhcIndoaXRlLXNlY3Rpb25cIikgJiYgc2VjdGlvbi5vZmZzZXRUb3AgPD0gY3VycmVudFNlY3Rpb24gKyA2MCkge1xyXG4gICAgICAgICRuYXZCdG5CYXJzLmNsYXNzTGlzdC5hZGQoXCJibGFjay1iYXJzLWNvbG9yXCIpO1xyXG4gICAgICB9IGVsc2UgaWYgKCFzZWN0aW9uLmNsYXNzTGlzdC5jb250YWlucyhcIndoaXRlLXNlY3Rpb25cIikgJiYgc2VjdGlvbi5vZmZzZXRUb3AgPD0gY3VycmVudFNlY3Rpb24gKyA2MCkge1xyXG4gICAgICAgICRuYXZCdG5CYXJzLmNsYXNzTGlzdC5yZW1vdmUoXCJibGFjay1iYXJzLWNvbG9yXCIpO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9O1xyXG5cclxuICAvL0kgd2FzIHRyeWluZyB0byBkbyBpdCB3aXRoIEFQSSwgYnV0IGl0IGlzIG5vdCB3b3JraW5nLFxyXG4gIC8vYmVjYXVzZSBnb29nbGUgbWFwcyBpcyBvbmx5IGZvciBkZXZlbG9wZXJzLCBhbmQgSSBkaWQgd2l0aCBpZnJhbWUuXHJcbiAgLy8gY29uc3QgaW5pdE1hcCA9ICgpID0+IHtcclxuICAvLyAgICAgbGV0IGxvY2F0aW9uID0ge2xhdDogNDkuODc5MzUwLCBsbmc6IDIxLjQxMTU5N307XHJcbiAgLy8gICAgIGxldCBtYXAgPSBuZXcgZ29vZ2xlLm1hcHMuTWFwKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWFwXCIpLHtcclxuICAvLyAgICAgICAgIHpvb206IDE0LFxyXG4gIC8vICAgICAgICAgY2VudGVyOiBsb2NhdGlvblxyXG4gIC8vICAgICB9KTtcclxuICAvLyAgICAgbGV0IG1hcmtlciA9IG5ldyBnb29nbGUubWFwcy5NYXJrZXIoe1xyXG4gIC8vICAgICAgICAgcG9zaXRpb246IGxvY2F0aW9uLFxyXG4gIC8vICAgICAgICAgbWFwOiBtYXBcclxuICAvLyAgICAgfSlcclxuICAvLyB9XHJcbiAgc2VjdGlvbk9uZU9ic2VydmVyLm9ic2VydmUoJHNlY3Rpb25PbmUpO1xyXG4gIGhhbmRsZUN1cnJlbnRZZWFyKCk7XHJcbiAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJzY3JvbGxcIiwgaGFuZGxlT2JzZXJ2ZXIpO1xyXG4gICRidXJnZXJCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGhhbmRsZU5hdik7XHJcbiAgJHBvcnRmb2xpb0xpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBzaG93RHJvcGRvd24pO1xyXG4gIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwibG9hZFwiLCBBT1MucmVmcmVzaCk7XHJcbiAgLy8gaW5pdE1hcCgpO1xyXG59O1xyXG5cclxuY29uc3QgbWFpbiA9ICgpID0+IHtcclxuICBwcmVwYXJlRE9NRWxlbWV0cygpO1xyXG4gIHByZXBhcmVET01FdmVudHMoKTtcclxufTtcclxuXHJcbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJET01Db250ZW50TG9hZGVkXCIsIG1haW4pO1xyXG4iXX0=
