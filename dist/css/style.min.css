.wrapper{margin:0 auto;width:100%;max-width:1200px}.wrapper-offers{margin:0 auto;width:100%;max-width:1000px}.wrapper-about{margin:0 auto;width:100%;max-width:1400px}.white-block{position:absolute;height:40px;width:40%}.white-block-left{top:0;left:-50px;transform:skew(-45deg)}.white-block-right{bottom:0;right:-50px;transform:skew(-45deg)}.nav-scrolled{color:#333;background-color:#000;box-shadow:0 3px 20px rgba(0,0,0,.2);transition:1s}@keyframes a{0%{background-image:url(../img/kinga1.png)}25%{background-image:url(../img/kinga3.PNG)}50%{background-image:url(../img/kinga1.png)}75%{background-image:url(../img/kinga3.PNG)}to{background-image:url(../img/kinga1.png)}}@keyframes b{0%{background-image:url(../img/headerHallery.jpg)}25%{background-image:url(../img/christmasChildBig.jpg)}50%{background-image:url(../img/snowflakeBig.jpg)}75%{background-image:url(../img/christmasBig.jpg)}to{background-image:url(../img/headerHallery.jpg)}}@keyframes c{0%{transform:translateX(-40px)}50%{transform:translateX(0)}to{transform:translateX(-40px)}}*,:after,:before{box-sizing:border-box;padding:0;margin:0}html{font-size:62.5%;scroll-behavior:smooth;overflow-x:hidden;scroll-padding-top:82px}body{font-size:1.6rem;overflow-x:inherit}.section-heading{position:relative;padding:1.5em;font-size:3rem;text-transform:uppercase;color:#d59c41;text-align:center;letter-spacing:2px;font-family:Cinzel,serif}.welcomeSection{display:grid;min-height:100vh;position:relative;overflow:hidden;grid-template-columns:repeat(2,1fr);grid-template-rows:repeat(2,1fr)}.welcomeSection__img{z-index:-100;background-image:url(../img/headerHallery.jpg);background-size:cover;background-position:50%;grid-row:1/3;grid-column:1/3;animation:b 30s infinite forwards}.welcomeSection__img-logo{background-image:url(../img/LOGO.png);background-size:cover;background-position:50%;background-size:contain;background-repeat:no-repeat;background-attachment:unset;background-color:rgba(0,0,0,.75);width:100%;height:100%}.aboutme__box{display:grid;grid-template-columns:repeat(2,2fr);grid-template-rows:100px 200px;padding:1em}.aboutme__box-img{background-image:url(../img/kinga1.png);background-size:cover;background-position:50%;background-attachment:unset;background-position:top;grid-row:1/3;grid-column:1/3;animation:a 20s infinite forwards}.aboutme__box-info{flex-direction:column;grid-row:3/3;grid-column:1/3}.aboutme__box-info-heading{padding:1em 0 .5em;font-weight:100;text-align:center;font-size:3rem;color:#d59c41;font-family:Raleway,sans-serif}.aboutme__box-info-text{display:flex;font-size:1rem;padding:1em;text-align:center;font-family:M PLUS\ 1,sans-serif}.aboutme__box-info-signature{color:#d59c41;margin-top:2em;font-family:Great Vibes,cursive;text-align:center;font-size:3.5rem}.hero-img .carousel .carousel-item{max-height:80vh}.hero-img .carousel .carousel-caption{background-color:rgba(0,0,0,.8)}.hero-img .carousel .carousel-caption h1{font-family:Raleway,sans-serif;text-transform:uppercase;color:#41bcac;font-size:2rem}.hero-img .carousel .carousel-caption p{font-size:1.5rem;color:#d59c41;font-family:M PLUS\ 1,sans-serif}.reviews{padding-top:8em;padding-bottom:8em}.reviews__box{position:relative;margin:2em;padding:2em;border-radius:8px;box-shadow:3px 3px 3px rgba(46,46,46,.1803921569);transition:transform .3s}.reviews__box-desktop{display:none}.reviews__box-info-quote{margin-bottom:1em;font-size:3rem;color:#d59c41}.reviews__box-info-text{margin-bottom:1em;font-size:1.4rem;color:#2e2e2e;font-family:M PLUS\ 1,sans-serif}.reviews__box-info strong{color:#d59c41;font-family:Great Vibes,cursive;font-size:3rem}.reviews__box:hover{transform:scale(.95)}.contact{position:relative;padding-bottom:3em;background-color:#e0dbde}.contact .white-block-right{background-color:#2e2e2e}.contact__box{height:400px;margin:2em}.contact__box-map{width:100%;height:400px;border:2px solid #d59c41}@media (min-width:360px){.nav{width:30%}.nav__items{margin-top:60px}.nav__item{font-size:2rem}.aboutme__box-info-text{font-size:1.2rem}.contact__map{margin:2em}}@media (min-width:411px){.contact__map{margin:3em}}@media (min-width:576px){.header__img-arrow{font-size:2.5rem;bottom:1.8em}.aboutme__box-info-text{font-size:1.5rem}}@media (min-width:768px){.white-block{height:50px}.aboutme{padding:5em 0 6em 2em}.aboutme__box{grid-template-rows:400px 400px}.aboutme__box-img{display:flex;justify-content:center;align-self:center;grid-row:1/-1;grid-column:1/2}.aboutme__box-info{position:relative;display:flex;grid-row:1/4;grid-column:2/3}.aboutme__box-info-heading{font-size:3rem}.aboutme__box-info-text{padding:5em;display:flex;align-self:center;justify-content:center;align-items:center}.aboutme__box-info-signature{position:absolute;display:flex;align-self:center;font-size:3rem;bottom:0}.hero-img .carousel .carousel-caption h1{font-size:4rem}.hero-img .carousel .carousel-caption p{font-size:3rem;color:#d59c41}.reviews{margin:0;margin-top:2em;margin-bottom:2em}.reviews__box{margin:0;padding:0 0 0 3em;border-radius:0;display:grid;grid-template-columns:repeat(2,2fr);box-shadow:0 0 0 rgba(46,46,46,.1803921569)}.reviews__box-img{background-image:url(../img/kinga4.PNG);background-size:cover;background-position:50%;background-attachment:unset;grid-row:1/2;grid-column:2/2;display:flex}.reviews__box-img-info{display:flex;flex-direction:column}.reviews__box-img-info-text{color:#d59c41;padding:1em;text-align:center;font-size:4rem;font-family:Raleway,sans-serif;font-weight:700}.reviews__box-img-info-more{margin-top:auto;text-align:center;font-size:3.5rem;color:#f9b2d3;text-decoration:none;padding:1em;animation:c 2s infinite}.reviews__box-img-info-more:hover{color:#f9b2d3}.reviews__box-info{display:flex;flex-direction:column;grid-row:1/2;grid-column:1/2;box-shadow:3px 3px 3px rgba(46,46,46,.1803921569)}.reviews__box-info-quote{display:flex;padding:1em 0 .5em;margin-bottom:0;font-size:5rem;color:#d59c41}.reviews__box-info-text{display:flex;font-size:1.8rem;padding:0 3em 3em;font-family:M PLUS\ 1,sans-serif}.reviews__box-info-signature{display:flex;justify-content:center;color:#41bcac;margin-top:auto;font-size:4rem;font-family:Great Vibes,cursive}.reviews__box:hover{transform:scale(1)}.contact{min-height:100vh;display:grid;justify-content:center}.contact .section-heading{padding-bottom:0;margin:0}.contact__box{display:grid;grid-template-columns:repeat(2,1fr);width:80vw;min-height:60vh}.contact__box-map{grid-column:1/2;min-height:60vh}.contact__box-map-boxmap{display:grid;grid-column:2/3;min-height:60vh;margin-left:2em}.contact__box-map-boxmap--img{margin:auto;background-image:url(../img/building.PNG);background-size:cover;background-position:50%;height:70%;width:90%;border-radius:6px;background-attachment:unset}.footer__box{grid-template-columns:repeat(2,1fr);grid-template-rows:100px 200px 100px;margin:0 2em;gap:35px}.footer__box-title{font-size:3.4rem}.footer__box-text{grid-column:1/2;grid-row:2/3}.footer__box-social{grid-column:1/2;grid-row:3/4}.footer__box-img{background-image:url(../img/LOGO.png);background-size:cover;background-position:50%;background-attachment:unset;grid-column:2/3;grid-row:1/4}.footer__box-desktop{display:block}}@media (min-width:921px){.nav{width:40%}.nav__item{font-size:4rem}.aboutme__box-info-heading{font-size:3rem}.aboutme__box-info-text{font-size:1.5rem}.aboutme__box-info-signature{font-size:3.5rem}}@media (min-width:1024px){.section-heading{font-size:5rem}.reviews__box{min-height:80vh}.reviews__box-img-info-text{font-size:4rem}.reviews__box-info-text{font-size:1.9rem}.reviews__box-info-signature{font-size:5.5rem}}@media screen and (min-width:1092px){.burger-btn{display:none}.navigationD{display:flex;justify-content:center;position:fixed;text-align:center;width:100%;z-index:100;letter-spacing:8px;transition:1s}.navigationD__desktop li{display:inline-block;text-align:center;padding:3em 2em 2em}.navigationD__desktop li :hover{color:#f9b2d3}.navigationD__desktop li a{text-decoration:none;text-transform:uppercase;font-size:2rem;color:#fff;transition:color .4s}}@media (min-width:1280px){.aboutme__box-info-heading{font-size:4rem}.aboutme__box-info-text{font-size:1.8rem}.aboutme__box-info-signature{font-size:4rem}.hero-img .carousel .carousel-caption{padding:3em}.hero-img .carousel .carousel-caption h1{font-size:4.5rem}.hero-img .carousel .carousel-caption p{font-size:3.5rem}.reviews__box-info-text{font-size:2.3rem}.reviews__box-info-signature{font-size:7.5rem}}@media (min-width:1835px){.header__img-arrow{font-size:5rem}.reviews__box{min-height:90vh}.reviews__box-img-info-text{font-size:5rem}.reviews__box-info-text{font-size:2.5rem;padding:3em}}@media only screen and (min-width:2065px){.section-heading{font-size:6rem}.burger-btn__bars{height:4px}.aboutme{padding-bottom:6em}.aboutme__box{grid-template-rows:400px 400px}.aboutme__box-info-heading{font-size:4.2rem;padding:.5em}.aboutme__box-info-text{font-size:2.2rem}.aboutme__box-info-signature{font-size:5rem}.hero-img .carousel .carousel-caption h1{font-size:6.5rem}.hero-img .carousel .carousel-caption p{font-size:4.5rem}.reviews__box-img-info-more{font-size:4rem}.reviews__box-info-quote{font-size:7rem}.reviews__box-info-text{padding:2em;font-size:3rem}}@media only screen and (min-width:2202px){.burger-btn__bars:after{height:4px}.reviews__box-info-text{font-size:3rem;padding:3em}.reviews__box-info-signature{font-size:7rem}}@media only screen and (min-width:2478px){.nav__item{font-size:5rem}.burger-btn__bars:after,.burger-btn__bars:before{height:5px}.aboutme__box-info-text{font-size:2rem}.hero-img .carousel .carousel-caption h1{font-size:8.5rem}.hero-img .carousel .carousel-caption p{font-size:6.5rem}.reviews__box-info-quote{font-size:10rem}.reviews__box-info-text{font-size:3.5rem}.reviews__box-info-signature{font-size:10rem}}@media only screen and (min-width:3098px){.nav__item{font-size:6rem}.reviews__box-img-info-text{font-size:10rem}.reviews__box-img-info-more{font-size:8rem}.reviews__box-info-quote{font-size:12rem}.reviews__box-info-text{font-size:4.5rem}.reviews__box-info-signature{font-size:11rem}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
