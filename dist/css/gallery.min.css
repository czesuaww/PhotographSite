@charset "UTF-8";.wrapper,.wrapper-offers{margin:0 auto;width:100%;max-width:1200px}.wrapper-about{margin:0 auto;width:100%;max-width:1400px}.white-block{position:absolute;height:40px;width:40%}.white-block-left{top:0;left:-50px;transform:skew(-45deg)}.white-block-right{bottom:0;right:-50px;transform:skew(-45deg)}.nav-scrolled{color:#333;background-color:#000;box-shadow:0 3px 20px rgba(0,0,0,.2);transition:1s}*,:after,:before{box-sizing:border-box;padding:0;margin:0}html{font-size:62.5%;scroll-behavior:smooth}body{font-family:Raleway,sans-serif;font-size:1.6rem;color:#fff}.welcomeSection{padding-bottom:5em}.welcomeSection__card{display:grid;min-height:100vh;position:relative;overflow:hidden;grid-template-rows:repeat(2,1fr);grid-template-columns:repeat(4,1fr)}.welcomeSection__card__img{grid-row:1/3;grid-column:1/3;z-index:-100}.welcomeSection__card-img{position:relative;justify-content:center}.welcomeSection__card-img--one{background-image:url(/dist/img/kasia1.jpg);grid-column:1/2}.welcomeSection__card-img--one,.welcomeSection__card-img--two{background-size:cover;background-position:50%;background-attachment:fixed;grid-row:1/3;background-attachment:unset}.welcomeSection__card-img--two{background-image:url(/dist/img/ola3.jpg);grid-column:2/3}.welcomeSection__card-img--three{background-image:url(/dist/img/sysia1.jpg);grid-column:3/4}.welcomeSection__card-img--four,.welcomeSection__card-img--three{background-size:cover;background-position:50%;background-attachment:fixed;grid-row:1/3;background-attachment:unset}.welcomeSection__card-img--four{background-image:url(/dist/img/kto≈õ1.jpg);grid-column:4/5}.welcomeSection__card-heroBg{display:flex;justify-content:center;align-items:center;position:absolute;background-color:rgba(0,0,0,.5);width:100%;height:100%}.welcomeSection__card-heroBg--text{text-align:center;font-size:8rem;text-transform:uppercase}.gallery li{list-style:none}.card-item a{text-decoration:none}.gallery{display:grid;grid-template-columns:repeat(auto-fit,minmax(10em,1fr));gap:25px}.gallery img{max-width:100%}@media (min-width:768px){.header__img-info-text{font-size:5rem}.header__img-info-subtext{font-size:2.5rem}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
